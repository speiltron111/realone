
<section
	id="MainProduct-{{ section.id }}"
	class="page-width"
  data-section="{{ section.id }}">
	{{ 'section-main-product.css' | asset_url | stylesheet_tag }}
	{{ 'component-accordion.css' | asset_url | stylesheet_tag }}
	{{ 'component-price.css' | asset_url | stylesheet_tag }}
	{{ 'component-rte.css' | asset_url | stylesheet_tag }}
	{{ 'component-slider.css' | asset_url | stylesheet_tag }}
	{{ 'component-rating.css' | asset_url | stylesheet_tag }}
	{{ 'component-product-form.css' | asset_url | stylesheet_tag }}

	<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">

	<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

	{%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}

	{%- if first_3d_model -%}
		{{ 'component-product-model.css' | asset_url | stylesheet_tag }}
		<link
			id="ModelViewerStyle"
			rel="stylesheet"
			href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
			media="print"
			onload="this.media='all'"
		>
		<link
			id="ModelViewerOverride"
			rel="stylesheet"
			href="{{ 'component-model-viewer-ui.css' | asset_url }}"
			media="print"
			onload="this.media='all'"
		>
	{%- endif -%}

	{% style %}
		@media screen and (max-width: 749px) {
			#shopify-section-{{ section.id }} {
				padding-top: {{ section.settings.padding_top | divided_by: 18.7 }}rem;
				padding-bottom: {{ section.settings.padding_bottom | divided_by: 18.7 }}rem;
			}
		}
		@media screen and (min-width: 750px) and (max-width: 1199px) {
			#shopify-section-{{ section.id }} {
				padding-top: {{ section.settings.padding_top | divided_by: 15.0 }}rem;
				padding-bottom: {{ section.settings.padding_bottom | divided_by: 15.0 }}rem;
			}
		}
		@media screen and (min-width: 1200px) {
			#shopify-section-{{ section.id }} {
				padding-top: {{ section.settings.padding_top | divided_by: 10.0 }}rem;
				padding-bottom: {{ section.settings.padding_bottom | divided_by: 10.0 }}rem;
			}
		}

		@media screen and (min-width: 750px) {
			#shopify-section-{{ section.id }} .product__info-container {
				max-width: {{ section.settings.content_width | divided_by: 10.0 }}rem;
			}
		}

		@media screen and (min-width: 1200px) {
			{% if section.settings.column_width != 50 %}
				#shopify-section-{{ section.id }} .product:not(.product--no-media) .grid__item.product__media-wrapper {
					width: {{ section.settings.column_width }}%;
					max-width: {{ section.settings.column_width }}%;
				}
				#shopify-section-{{ section.id }} .product:not(.product--no-media) .grid__item.product__info-wrapper {
					width: calc( 100% - {{ section.settings.column_width }}%);
					max-width: calc( 100% - {{ section.settings.column_width }}%);
				}
			{% endif %}
		}
	{% endstyle %}

	{% if section.settings.background_style == 'secondary' %}
		{% style %}
			{% if section.settings.color_bg != blank %}
				#shopify-section-{{ section.id }} {
					background-color: {{ section.settings.color_bg }};
				}

				#shopify-section-{{ section.id }} .product__modal-opener,
				#shopify-section-{{ section.id }} .select__select {
					background-color: {{ section.settings.color_bg }};
				}
			{% endif %}
		{% endstyle %}
	{% endif %}

  {% if section.settings.enable_breadcrumb %}
    <div class="breadcrumb-section {{ section.settings.breadcrumb_style }}">
      {% render 'breadcrumb', 
        product: product, 
        space: section.settings.breadcrumbs_space,
        product_collection: section.settings.breadcrumbs_product_collection, 
        custom_collection: section.settings.custom_product_collection,
        show_products: section.settings.show_products,
        custom_collections: section.settings.custom_product_collection_list
      %}
    </div>
  {% endif %}
  <div class="product product--medium product--{{ section.settings.gallery_layout }}{% if section.settings.mobile_thumbnails == 'show' %} mobile-thumbnails{% endif %} grid grid--1-col{% if product.media.size > 0 and section.settings.gallery_layout == "columns" %} grid--2-col-tablet {% elsif product.media.size < 1 %} product--no-media{% endif %} {{ section.settings.columns_gap }} {% if section.settings.overlay != blank %} section-overlay{% endif %}">
    {% if section.settings.overlay != blank %}
      {%- liquid
        assign image_height = section.settings.overlay.width | divided_by: section.settings.overlay.aspect_ratio
      -%}
      <div class="section-overlay__img">
        {{
          section.settings.overlay
          | image_url: width: 480
          | image_tag: loading: 'lazy', width: section.settings.overlay.width, height: image_height
        }}
      </div>
    {%- endif -%}
    <div class="grid__item product__media-wrapper">
      <media-gallery id="MediaGallery-{{ section.id }}" role="region" class="{% if section.settings.enable_sticky_content %} product__column-sticky{% endif %} {% if section.settings.thumbnail_position == 'right' %}media-gallery  thumbnail--right{% elsif section.settings.thumbnail_position == 'left' %}media-gallery thumbnail--left{% endif %}{% if section.settings.gallery_layout == "stacked" or section.settings.gallery_layout == "stacked-without-gaps" %} product__media-gallery{% endif %}{% if section.settings.gallery_layout == "stacked-without-gaps" %} product__media-gallery product__media-gallery-gaps---none{% endif %}" aria-label="{{ 'products.product.media.gallery_viewer' | t }}" data-desktop-layout="{{ section.settings.gallery_layout }}">

        {% if section.settings.section_show_badges == true %}
          <div class="card__badge">
            {%- if product.compare_at_price > product.price and product.available -%}
              <span class="badge {% if settings.color_label_bg_gradient != blank %} gradient{% endif %} price__badge-sale badge--top-left" aria-hidden="true">
                {% if settings.sale_badge_style == 'sale' %}
                  {{- 'products.product.on_sale' | t -}}
                {% elsif settings.sale_badge_style == 'saving' %}
                  {%- assign savings = product.compare_at_price | minus: product.price | money_without_trailing_zeros -%}
                  {{- 'products.product.on_sale_save' | t }} {{ savings -}}
                {% else %}
                  {%- assign savings = product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round | append: '%' -%}
                  {{- savings }} {{ 'products.product.on_sale_off' | t -}} 
                {% endif %}
              </span>
            {%- endif -%}

            {% for tag in product.tags %}
              {%- liquid
                assign tag_handleize = tag | handleize
                assign badge_names = settings.badge_names | split: ','
              %}
              {% for badge in badge_names %}
                {% assign badge_handleize = badge | handleize %}
                {% if tag_handleize contains badge_handleize and tag_handleize == badge_handleize %}
                  <span class="badge badge--top-left {% if settings.color_label_bg_gradient != blank %} gradient {% endif %}" aria-hidden="true">
                    {{- badge | escape -}}
                  </span>
                {% endif %}
              {% endfor %}
            {% endfor %}
            {%- if product.available == false -%}
              <span class="badge price__badge-sold-out badge--top-left {% if settings.color_label_bg_gradient != blank %} gradient{% endif %}" aria-hidden="true">
                {{ 'products.product.sold_out' | t }}
              </span>
            {%- endif -%}
          </div>
        {% endif %}

        <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>

        <slider-component id="GalleryViewer-{{ section.id }}" class="slider-mobile-gutter main-slider {% if section.settings.mobile_thumbnails == 'numbers' %} numbers{% endif %} {% if section.settings.mobile_thumbnails == 'bullets' %} bullets{% endif %}">

          <a class="skip-to-content-link button visually-hidden" href="#ProductInfo-{{ section.id }}">
            {{ 'accessibility.skip_to_product_info' | t }}
          </a>

          <ul id="Slider-Gallery-{{ section.id }}" class="product__media-list media-fit-{{ section.settings.media_fit }} grid grid--peek list-unstyled slider slider--mobile" role="list">
            {%- liquid
              assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
              assign media_count = product.media.size
              if section.settings.hide_variants
                assign media_count = media_count | minus: variant_images.size | plus: 1
              endif

							assign media_width = 0.55
            -%}

            {%- if product.selected_or_first_available_variant.featured_media != null -%}
              {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
              <li id="Slide-{{ section.id }}-{{ featured_media.id }}" class="product__media-item grid__item slider__slide is-active animate--fade-in {% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ featured_media.id }}">

                {%- assign media_position = 1 -%}
                {% render 'product-thumbnail',
                  media: featured_media,
                  position: media_position,
                  loop: section.settings.enable_video_looping,
                  play: section.settings.enable_video_autoplay,
                  modal_id: section.id,
                  xr_button: true,
                  media_width: media_width,
                  layout: section.settings.gallery_layout,
                  lazy_load: false,
                  popup: section.settings.enable_gallery_popup,
                  show_image_outline: section.settings.show_image_outline
                %}
              </li>
            {%- endif -%}

            {%- for media in product.media -%}
              {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                <li id="Slide-{{ section.id }}-{{ media.id }}" class="product__media-item grid__item slider__slide animate--fade-in {% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}" data-media-id="{{ section.id }}-{{ media.id }}">
                  {%- assign media_position = media_position | default: 0 | plus: 1 -%}
                  {% render 'product-thumbnail',
                    media: media,
                    position: media_position,
                    loop: section.settings.enable_video_looping,
                    play: section.settings.enable_video_autoplay,
                    modal_id: section.id,
                    xr_button: true,
                    media_width: media_width,
                    layout: section.settings.gallery_layout,
                    lazy_load: true,
                    popup: section.settings.enable_gallery_popup,
                    show_image_outline: section.settings.show_image_outline
                  %}
                </li>
              {%- endunless -%}
            {%- endfor -%}
          </ul>

          {% if section.settings.mobile_thumbnails == 'numbers' %}
            <div class="slider-buttons no-js-hidden{% if media_count < 2 or section.settings.mobile_thumbnails == 'show' %} small-hide{% endif %}">
              <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">
                {% render 'icon-caret' %}
              </button>

              <div class="slider-counter caption">
                <span class="slider-counter--current">1</span>
                <span aria-hidden="true"> / </span>
                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                <span class="slider-counter--total">{{ media_count }}</span>
              </div>

              <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">
                {% render 'icon-caret' %}
              </button>
            </div>
          {% elsif section.settings.mobile_thumbnails == 'bullets' %}
            <div class="slider-buttons slider-buttons--bullets no-js-hidden {% if settings.color_events_button_bg_hover_gradient != blank %} gradient--hover{% endif %} {% if product.media.size < 2 %} small-hide{% endif %}">
              {%- for media in product.media -%}
                {% assign i = i | plus: 1 %}
                <span class="slider-bullet" data-bullet="{{ i }}" data-media-id="{{ section.id }}-{{ media.id }}"> </span>
              {%- endfor -%}
            </div>
          {% endif %}
        </slider-component>

        {%- if section.settings.mobile_thumbnails == 'show'
          or section.settings.gallery_layout == 'thumbnail_slider'
          or section.settings.gallery_layout == 'thumbnail'
        -%}

          <slider-component id="GalleryThumbnails-{{ section.id }}" class="thumbnail-slider slider-mobile-gutter{% if section.settings.mobile_thumbnails != 'show' %} small-hide{% endif %}{% if media_count <= 3 %} thumbnail-slider--no-slide{% endif %}">

            <button type="button" class="slider-button slider-button--prev{% if media_count <= 3 %} small-hide{% endif %}{% if media_count <= 4 %} medium-hide large-up-hide{% endif %}" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}" aria-controls="GalleryThumbnails-{{ section.id }}" data-step="3">
              {% render 'icon-caret' %}
            </button>

            <ul id="Slider-Thumbnails-{{ section.id }}" class="thumbnail-list list-unstyled slider slider--mobile{% if section.settings.gallery_layout == 'thumbnail_slider' %} slider--tablet-up{% endif %}{% if section.settings.gallery_layout_circle %} circle{% endif %}">

              {%- if featured_media != null -%}
                {%- liquid
                  capture media_index
                    if featured_media.media_type == 'model'
                      increment model_index
                    elsif featured_media.media_type == 'video' or featured_media.media_type == 'external_video'
                      increment video_index
                    elsif featured_media.media_type == 'image'
                      increment image_index
                    endif
                  endcapture
                  assign media_index = media_index | plus: 1
                -%}

                <li id="Slide-Thumbnails-{{ section.id }}-0" class="thumbnail-list__item slider__slide{% if section.settings.hide_variants and variant_images contains featured_media.src %} thumbnail-list_item--variant{% endif %}" data-target="{{ section.id }}-{{ featured_media.id }}" data-media-position="{{ media_index }}" >
                  <button class="thumbnail global-media-settings global-media-settings--no-shadow {% if featured_media.preview_image.aspect_ratio > 1 %}thumbnail--wide{% else %}thumbnail--narrow{% endif %}" aria-label="{%- if featured_media.media_type == 'image' -%}{{ 'products.product.media.load_image' | t: index: media_index }}{%- elsif featured_media.media_type == 'model' -%}{{ 'products.product.media.load_model' | t: index: media_index }}{%- elsif featured_media.media_type == 'video' or featured_media.media_type == 'external_video' -%}{{ 'products.product.media.load_video' | t: index: media_index }}{%- endif -%}" aria-current="true" aria-controls="GalleryViewer-{{ section.id }}" aria-describedby="Thumbnail-{{ section.id }}-0">
                    <img  id="Thumbnail-{{ section.id }}-0" srcset="
                        {% if featured_media.preview_image.width >= 54 %}{{ featured_media.preview_image | image_url: width: 74 }} 74w,{% endif %}
                        {% if featured_media.preview_image.width >= 74 %}{{ featured_media.preview_image | image_url: width: 104 }} 104w,{% endif %}
                        {% if featured_media.preview_image.width >= 104 %}{{ featured_media.preview_image | image_url: width: 104 }} 104w,{% endif %}
                        {% if featured_media.preview_image.width >= 162 %}{{ featured_media.preview_image | image_url: width: 162 }} 162w,{% endif %}
                        {% if featured_media.preview_image.width >= 208 %}{{ featured_media.preview_image | image_url: width: 208 }} 208w,{% endif %}
                        {% if featured_media.preview_image.width >= 324 %}{{ featured_media.preview_image | image_url: width: 324 }} 324w,{% endif %}
                        {% if featured_media.preview_image.width >= 416 %}{{ featured_media.preview_image | image_url: width: 416 }} 416w{% endif %},
                        {{ featured_media.preview_image | image_url }} {{ media.preview_image.width }}w"
                      src="{{ featured_media | image_url: width: 416 }}"
                      sizes="(min-width: {{ settings.page_width }}px) calc(({{ settings.page_width | minus: 100 | times: media_width | round }} - 4rem) / 4), (min-width: 990px) calc(({{ media_width | times: 100 }}vw) / 4), (min-width: 750px) calc((100vw) / 3), calc((100vw) / 3)"
                      alt="{{ featured_media.alt | escape }}"
                      height="208"
                      width="208"
                      loading="lazy"
                    >
                  </button>
                </li>
              {%- endif -%}

              {%- for media in product.media -%}
                {%- unless media.id == product.selected_or_first_available_variant.featured_media.id -%}
                  {%- liquid
                    capture media_index
                      if media.media_type == 'model'
                        increment model_index
                      elsif media.media_type == 'video' or media.media_type == 'external_video'
                        increment video_index
                      elsif media.media_type == 'image'
                        increment image_index
                      endif
                    endcapture
                    assign media_index = media_index | plus: 1
                  -%}
                  <li id="Slide-Thumbnails-{{ section.id }}-{{ forloop.index }}" class="thumbnail-list__item slider__slide{% if section.settings.hide_variants and variant_images contains media.src %} thumbnail-list_item--variant{% endif %}" data-target="{{ section.id }}-{{ media.id }}" data-media-position="{{ media_index }}" >
                    {%- if media.media_type == 'model' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-3d-model' -%}
                      </span>
                    {%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}
                      <span class="thumbnail__badge" aria-hidden="true">
                        {%- render 'icon-play' -%}
                      </span>
                    {%- endif -%}
                    <button
                      class="thumbnail global-media-settings global-media-settings--no-shadow {% if media.preview_image.aspect_ratio > 1 %}thumbnail--wide{% else %}thumbnail--narrow{% endif %}"
                      aria-label="{%- if media.media_type == 'image' -%}{{ 'products.product.media.load_image' | t: index: media_index }}{%- elsif media.media_type == 'model' -%}{{ 'products.product.media.load_model' | t: index: media_index }}{%- elsif media.media_type == 'video' or media.media_type == 'external_video' -%}{{ 'products.product.media.load_video' | t: index: media_index }}{%- endif -%}"
                      {% if media == product.selected_or_first_available_variant.featured_media
                        or product.selected_or_first_available_variant.featured_media == null
                        and forloop.index == 1
                      %}
                        aria-current="true"
                      {% endif %}
                      aria-controls="GalleryViewer-{{ section.id }}"
                      aria-describedby="Thumbnail-{{ section.id }}-{{ forloop.index }}"
                    >
                      <img
                        id="Thumbnail-{{ section.id }}-{{ forloop.index }}"
                        srcset="
                          {% if media.preview_image.width >= 59 %}{{ media.preview_image | image_url: width: 200 }} 59x,{% endif %}
                        "
                        src="{{ media | image_url: width: 1200, height: 1200 }}"
                        sizes="(min-width: 1200px) calc((1200px) / 3), (min-width: 750px) calc((100vw), calc((100vw))"
                        alt="{{ media.alt | escape }}"
                        height="100"
                        width="100"
                        loading="lazy"
                      >
                    </button>
                  </li>
                {%- endunless -%}
              {%- endfor -%}
            </ul>

            <button
              type="button"
              class="slider-button slider-button--next{% if media_count <= 3 %} small-hide{% endif %}{% if media_count <= 4 %} medium-hide large-up-hide{% endif %}"
              name="next"
              aria-label="{{ 'general.slider.next_slide' | t }}"
              aria-controls="GalleryThumbnails-{{ section.id }}"
              data-step="3"
            >
              {% render 'icon-caret' %}
            </button>
          </slider-component>
        {%- endif -%}
      </media-gallery>
    </div>

    <div class="product__info-wrapper grid__item{% if section.settings.thumbnail_position != 'bottom' %} grid--thumbs{% endif %} {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %}">
      {%- assign product_form_id = 'product-form-' | append: section.id -%}
      <div
        id="ProductInfo-{{ section.id }}"
        class="product__info-container {% if section.settings.enable_sticky_content %} product__column-sticky{% endif %} {% if section.settings.gallery_layout == "stacked" or section.settings.gallery_layout == "stacked-without-gaps" %} product__info-container--sticky{% endif %}"
      >
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}

            {%- when 'text' -%}
              {% if block.settings.text != blank %}
                <p
                  class="product__text {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %} {{ block.settings.text_size }}"
                  {{ block.shopify_attributes }}
                >
                  {{- block.settings.text -}}
                </p>
              {% endif %}

            {%- when 'icon-with-text' -%}
              {% if block.settings.text != blank %}
                <div
                  class="product__icon-with-text {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {{ block.settings.font_size }} {{ block.settings.bottom_space }}"
                  {{ block.shopify_attributes }}
                >
                  {% if block.settings.icon != blank %}
                    {% assign image_height = block.settings.icon.width | divided_by: block.settings.icon.aspect_ratio %}
                    {{
                      block.settings.icon
                      | image_url: width: block.settings.icon.width
                      | image_tag: loading: 'lazy', width: block.settings.icon.width, height: image_height
                    }}
                  {% endif %}
                  <span>
                    {{- block.settings.text -}}
                  </span>
                </div>
              {% endif %}

            {%- when 'title' -%}
              <h1
                class="product__title {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {% if block.settings.title_font == 'hf-heading' %} heading-font{% endif %}{% if block.settings.block_width %} half{% endif %} {{ block.settings.title_color }} {{ block.settings.title_size }} {{ block.settings.title_weight }} {{ block.settings.title_style}}"
                {{ block.shopify_attributes }}
              >
                {{ product.title | escape }}
              </h1>

            {%- when 'price' -%}
              <div class="product__price no-js-hidden {{ block.settings.price_weight }} {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {% if block.settings.block_width %} half{% endif %}"
                id="price-{{ section.id }}"
                {{ block.shopify_attributes }}>
                {% assign price_class = block.settings.price_class %}
                {%- render 'price',
                  product: product,
                  use_variant: true,
                  show_prices: true,
                  show_badges: false,
                  price_class: price_class,
                  price_font: block.settings.price_font
                -%}

                {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                  <div class="product__tax caption rte">
                    {%- if cart.taxes_included -%}
                      {{ 'products.product.include_taxes' | t }}
                    {%- endif -%}
                    {%- if shop.shipping_policy.body != blank -%}
                      {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                    {%- endif -%}
                  </div>
                {%- endif -%}
              </div>

              <div style="width: unset;" {{ block.shopify_attributes }}>
                {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  {{ form | payment_terms }}
                {%- endform -%}
              </div>

            {%- when 'inventory' -%}
              <p class="product__inventory no-js-hidden {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} visibility-hidden{% endif %}"
                {{ block.shopify_attributes }}
                id="Inventory-{{ section.id }}"
                role="status">
                
                {%- if product.selected_or_first_available_variant.inventory_management == 'shopify' -%}
                  {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                    {%- if product.selected_or_first_available_variant.inventory_quantity
                        <= block.settings.inventory_threshold
                    -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(238,148,65, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(238,148,65)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{-
                          'products.product.inventory_low_stock_show_count'
                          | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                        -}}
                      {%- else -%}
                        {{- 'products.product.inventory_low_stock' | t -}}
                      {%- endif -%}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{-
                          'products.product.inventory_in_stock_show_count'
                          | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                        -}}
                      {%- else -%}
                        {{- 'products.product.inventory_in_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- else -%}
                    {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(200,200,200, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(200,200,200)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock' | t -}}
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
              </p>

            {%- when 'description' -%}
              {%- if product.description != blank -%}
                <div
                  class="product__description rte {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {% if block.settings.description_tab %} accordion{% endif %} {% if block.settings.description_top_line %} top-line {% endif %}"
                  {{ block.shopify_attributes }}
                >
                  {%- if block.settings.description_tab -%}<details>{%- endif -%}

                  {%- if block.settings.description_heading != blank -%}
                    {%- if block.settings.description_tab -%}<summary>{%- endif -%}
                    <h2 class="accordion__title {{ block.settings.color_description_title }} {{ block.settings.size_description_title }}">
                      {{ block.settings.description_heading }}
                    </h2>
                    {%- if block.settings.description_tab -%}{% render 'icon-caret' %}{%- endif -%}
                    {%- if block.settings.description_tab -%}</summary>{%- endif -%}
                  {%- endif -%}

                  <div class="accordion__content rte {{ block.settings.text_size }}">
                    {{ product.description }}
                  </div>

                  {%- if block.settings.description_tab -%}</details>{%- endif -%}
                </div>
              {%- endif -%}

            {%- when 'custom_liquid' -%}
              {{ block.settings.custom_liquid }}

            {%- when 'product_features' -%}
              <div class="product-features" {{ block.shopify_attributes }}>
                {%- if block.settings.product_features_image != blank -%}
                  <img
                    srcset="
                      {%- if block.settings.product_features_image.width >= 165 -%}{{ block.settings.product_features_image | image_url: width: 165 }} 165w,{%- endif -%}
                      {%- if block.settings.product_features_image.width >= 360 -%}{{ block.settings.product_features_image | image_url: width: 360 }} 360w,{%- endif -%}
                      {%- if block.settings.product_features_image.width >= 535 -%}{{ block.settings.product_features_image | image_url: width: 535 }} 535w{%- endif -%}
                    "
                    src="{{ block.settings.product_features_image | image_url: width: 535 }}"
                    sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)"
                    alt="{{ block.settings.product_features_image.alt | escape }}"
                    loading="lazy"
                    width="{{ block.settings.product_features_image.width }}"
                    height="{{ block.settings.product_features_image.height }}"
                  >
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}

                {%- if block.settings.product_features_heading != blank -%}
                  <span class="product-features__title {{ block.settings.font_weight }} {{ block.settings.text_size }}">
                    {{ block.settings.product_features_heading }}
                  </span>
                {%- endif -%}
              </div>

            {%- when 'collapsible_tab' -%}
              {%- if block.settings.content != blank or block.settings.page.content != blank -%}
                <div class="product__accordion accordion" {{ block.shopify_attributes }}>
                  <details>
                    <summary>
                      <div class="summary__title">
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class="h4 accordion__title {{ block.settings.color_description_title }} {{ block.settings.size_description_title }}">
                          {{ block.settings.heading | default: block.settings.page.title }}
                        </h2>
                      </div>
                      {% render 'icon-caret' %}
                    </summary>
                    <div class="accordion__content rte">
                      {{ block.settings.content }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>
              {%- endif -%}

            {%- when 'popup' -%}
              {% if block.settings.page != blank %}
                <modal-opener
                  class="product-popup-modal__opener no-js-hidden"
                  data-modal="#PopupModal-{{ block.id }}"
                  {{ block.shopify_attributes }}
                >
                  <button
                    id="ProductPopup-{{ block.id }}"
                    class="product-popup-modal__button link link-no-underline"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    {% if block.settings.link_icon_image != blank %}
                      <img
                        srcset="{%- if block.settings.link_icon_image.width >= 65 -%}{{ block.settings.link_icon_image | image_url: width: 165 }} 65w,{%- endif -%}"
                        src="{{ block.settings.link_icon_image | image_url: width: 535 }}"
                        sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)"
                        alt="{{ block.settings.link_icon_image.alt | escape }}"
                        loading="lazy"
                        width="{{ block.settings.link_icon_image.width }}"
                        height="{{ block.settings.link_icon_image.height }}"
                      >
                    {% else %}
                      <svg width="24" height="8" viewBox="0 0 24 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d='M0 0V8H23.9998L24 0H0ZM23.2742 7.20819H0.752514V0.764505H3.35944V2.94885H4.11195V0.764505H6.69209V2.94885L7.44461 2.94866V0.764314H10.0247V2.94866H10.7773V0.764314H13.3574V2.94866H14.1099V0.764314H16.6901V2.94866H17.4426V0.764314H20.0227V2.94866H20.7752V0.764314H23.3016L23.3012 7.208L23.2742 7.20819Z' fill='#1D322D'/>
                      </svg>
                    {% endif %}
                    {{ block.settings.text | default: block.settings.page.title }}
                  </button>

                  {% if block.settings.popup_background != blank %}
                    <style>
                      .product-popup-modal__content {
                        background-image: url("{{ block.settings.popup_background | image_url: width: 1400 }}");
                        background-position: center;
                        background-size: cover;
                      }
                    </style>
                  {% endif %}
                </modal-opener>

                <a
                  href="{{ block.settings.page.url }}"
                  class="product-popup-modal__button link link-no-underline no-js"
                >
                  {{ block.settings.text }}
                </a>
              {% endif %}

            {%- when 'share' -%}
              {% assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin %}
              {% render 'product-share-button', block: block, share_link: share_url %}
            {%- when 'coundownBar' -%}
              <div
                id="coundownBar-{{ section.id }}"
                class="countdown-bar countdown-bar-js {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {{ block.settings.countdown_style }} {{ block.settings.bottom_space }}"
                data-date="{{ block.settings.coundown_date }}"
                data-complited="{{ block.settings.coundown_end }}"
                {{ block.shopify_attributes }}
              >
                <script src="{{ 'countdown.js' | asset_url }}" defer="defer"></script>
                {{ 'component-countdown-bar.css' | asset_url | stylesheet_tag }}
                {% style %}
                  {% if block.settings.days_color != blank %}
										#ProductInfo-{{ section.id }} .countdown-bar__days,
										#ProductInfo-{{ section.id }} .countdown-bar__days+.countdown-bar__title, 
                  	#shopify-section-{{ section.id }} .countdown-bar__days,
                  	#shopify-section-{{ section.id }} .countdown-bar__days+.countdown-bar__title {
                  		color: {{ block.settings.days_color }} ;
                  	}
                  {% endif %}
                  {% if block.settings.hours_color != blank %}
                  	#ProductInfo-{{ section.id }} .countdown-bar__hours,
                  	#ProductInfo-{{ section.id }} .countdown-bar__hours+.countdown-bar__title,
                  	#shopify-section-{{ section.id }} .countdown-bar__hours,
                  	#shopify-section-{{ section.id }} .countdown-bar__hours+.countdown-bar__title {
                  	color: {{ block.settings.hours_color }} ;
                  	}
                  {% endif %}
                  {% if block.settings.mins_color != blank %}
                  	#ProductInfo-{{ section.id }} .countdown-bar__min,
                  	#ProductInfo-{{ section.id }} .countdown-bar__min+.countdown-bar__title,
                  	#shopify-section-{{ section.id }} .countdown-bar__min,
                  	#shopify-section-{{ section.id }} .countdown-bar__min+.countdown-bar__title {
                  		color: {{ block.settings.mins_color }} ;
                  	}
                  {% endif %}
                  {% if block.settings.secs_color != blank %}
                  	#ProductInfo-{{ section.id }} .countdown-bar__sec,
                  	#ProductInfo-{{ section.id }} .countdown-bar__sec+.countdown-bar__title,
                  	#shopify-section-{{ section.id }} .countdown-bar__sec,
                  	#shopify-section-{{ section.id }} .countdown-bar__sec+.countdown-bar__title {
                  		color: {{ block.settings.secs_color }} ;
                  	}
                  {% endif %}
                {% endstyle %}

                {%- if block.settings.contdown_label -%}
                  <div class="contdown-bar__label {{ block.settings.font_family }}">
                    <span class="{{ block.settings.contdown_label_text_color }}">
                      {{ block.settings.contdown_label }}
                    </span>
                  </div>
                {%- endif -%}
                <div class="countdown-bar__items">
                  <div class="countdown-bar__item">
                    <span class="countdown-bar__number countdown-bar__days">00</span>
                    <span class="countdown-bar__title">
                      {{- block.settings.days_label -}}
                    </span>
                  </div>
                  <div class="countdown-bar__item">
                    <span class="countdown-bar__number countdown-bar__hours">00</span>
                    <span class="countdown-bar__title">
                      {{- block.settings.hours_label -}}
                    </span>
                  </div>
                  <div class="countdown-bar__item">
                    <span class="countdown-bar__number countdown-bar__min">00</span>
                    <span class="countdown-bar__title">
                      {{- block.settings.mins_label -}}
                    </span>
                  </div>
                  <div class="countdown-bar__item">
                    <span class="countdown-bar__number countdown-bar__sec">00</span>
                    <span class="countdown-bar__title">
                      {{- block.settings.secs_label -}}
                    </span>
                  </div>
                </div>
              </div>

            {%- when 'variant_picker' -%}
              <style>
                #ProductInfo-{{ section.id }} .form__label:not(.field__label),
                #shopify-section-{{ section.id }} .form__label:not(.field__label) {
                	font-size: {{ block.settings.label_font_size | divided_by: 10.0 }}rem;
                	font-weight: {{ block.settings.label_font_weight }};
                }
                #ProductInfo-{{ section.id }} .quantity__input,
                #ProductInfo-{{ section.id }} .variant-radios:not(:has(.variant-color)) label,
                #ProductInfo-{{ section.id }} .select__select,
                #shopify-section-{{ section.id }} .quantity__input,
                #shopify-section-{{ section.id }} .variant-radios:not(:has(.variant-color)) label,
                #shopify-section-{{ section.id }} .select__select {
                	font-size: {{ block.settings.picker_font_size | divided_by: 10.0 }}rem;
                	font-weight: {{ block.settings.picker_font_weight }};
                }
              </style>

              {%- unless product.has_only_default_variant -%}
                {%- if block.settings.picker_type == 'button' -%}
                  <variant-radios class="variant-picker no-js-hidden variant-radios {{ block.settings.picker_style }} type-{{ block.settings.picker_type }}{% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %}" data-section="{{ section.id }}" data-url="{{ product.url }}" data-update-url="true" {{ block.shopify_attributes }}>

                    {%- for option in product.options_with_values -%}
                      {%- assign variant_color = option.name | escape | downcase -%}
                      {%- assign variant_color_labels = settings.product_variants_name
                        | replace: ', ', ','
                        | downcase
                        | split: ','
                      -%}

                      {% if block.settings.color_button and variant_color_labels contains variant_color %}
                        <fieldset class="js product-form__input variant-color">
                          {% if block.settings.picker_label %}
                            <label class="form__label">
                              {{- option.name }} (<span class="color-label">{{ option.selected_value }}</span>)
                            </label>
                          {% endif %}
                          <div class="radio">
														{% render 'product-variant-options', 
                              product: product, 
                              option: option,
                              block: block, 
                              picker_type: 'button', 
                              is_color: true 
                            %}
                          </div>
                        </fieldset>

                      {%- else -%}

                        <fieldset class="js product-form__input product-form__input--pills{% if product.gift_card? == true %} variant-denominations{% endif %}">
                          {%- if block.settings.picker_label -%}
                            <legend class="form__label {{ block.settings.label_text_style }}">{{ option.name }}</legend>
                          {%- endif -%}

													{% render 'product-variant-options', 
                            product: product, 
                            option: option, 
                            block: block, 
                            picker_type: 'button', 
                            is_color: false 
                          %}
                        </fieldset>
                      {%- endif -%}
                    {%- endfor -%}
                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-radios>

                {%- else -%}

                  <variant-selects class="variant-picker no-js-hidden {% if block.settings.color_button and block.settings.picker_type == 'dropdown' %} color-button{% endif %} {{ block.settings.picker_style }}{% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %}" data-section="{{ section.id }}" data-url="{{ product.url }}" data-update-url="true" {{ block.shopify_attributes }}>
                    {%- for option in product.options_with_values -%}
                      {%- assign variant_color = option.name | escape | downcase -%}
                      {%- assign variant_color_labels = settings.product_variants_name
                        | replace: ', ', ','
                        | downcase
                        | split: ','
                      -%}
                      {% if block.settings.color_button and variant_color_labels contains variant_color %}
                        <div class="product-form__input hidden product-form__input--dropdown variant-color color-button">
                          {%- if block.settings.picker_label -%}
                            <label class="form__label {{ block.settings.label_text_style }}" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                              {{ option.name }}
                            </label>
                          {%- endif -%}
                          <div class="select">
                            <select
                              id="Option-{{ section.id }}-{{ forloop.index0 }}"
                              class="select__select {{ block.settings.picker_text_style }}"
                              name="options[{{ option.name | escape }}]"
                              form="{{ product_form_id }}"
                            >
															{% render 'product-variant-options', 
                                product: product, 
                                option: option, 
                                block: block, 
                                picker_type: 'select', 
                                is_color: true 
                              %}
                            </select>
                            {% render 'icon-caret' %}
                          </div>
                        </div>

                      {%- else -%}
                        <div class="product-form__input product-form__input--dropdown variant-{{ option.name | escape | downcase }}">

                          {%- if block.settings.picker_label -%}
                            <label class="form__label {{ block.settings.label_text_style }}" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                              {{ option.name }}
                            </label>
                          {%- endif -%}

                          <div class="select">
                            <select id="Option-{{ section.id }}-{{ forloop.index0 }}" class="select__select {{ block.settings.picker_text_style }}" name="options[{{ option.name | escape }}]" form="{{ product_form_id }}">

															{% render 'product-variant-options', 
                                product: product, 
                                option: option, 
                                block: block, 
                                picker_type: 'select', 
                                is_color: false 
                              %}

                            </select>

                            {% render 'icon-caret' %}
                          </div>
                        </div>
                      {% endif %}

                      {% if product.options_with_values.size < 2 and variant_color == variant_color_labels %}
                        <script>
                          function hideOption() {
                            let checkhideOption = setInterval(function () {
                              let colorButton = document.querySelector(
                                '.product-form__input.hidden.product-form__input--dropdown.variant-color.color-button'
                              );
                              if (colorButton) {
                                colorButton.parentElement.style.display = 'none';
                              }
                            }, 100);
                            setTimeout(() => {
                              clearInterval(checkhideOption);
                            }, 8000);
                          }
                          document.addEventListener('DOMContentLoaded', hideOption);
                          document.addEventListener('shopify:section:load', hideOption);
                          window.addEventListener('resize', hideOption);
                        </script>
                      {% endif %}
                    {%- endfor -%}
                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  </variant-selects>

                  {% if block.settings.color_button %}
                    <variant-radios
                      class="variant-picker no-js-hidden color-button {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {{ block.settings.picker_style }}"
                      data-section="{{ section.id }}"
                      data-url="{{ product.url }}"
                      data-update-url="true"
                      {{ block.shopify_attributes }}
                    >
                      {%- for option in product.options_with_values -%}
                        {%- assign variant_color = option.name | escape | downcase -%}
                        {%- assign variant_color_labels = settings.product_variants_name
                          | replace: ', ', ','
                          | downcase
                          | split: ','
                        -%}

                        {% if block.settings.color_button and variant_color_labels contains variant_color %}
                          <fieldset class="js custom product-form__input variant-color">
                            {% if block.settings.picker_label %}
                              <label class="form__label {{ block.settings.label_text_style }}">
                                {{- option.name }} (<span class="color-label">{{ option.selected_value }}</span>)
                              </label>
                            {% endif %}

                            <div class="radio">
															{% render 'product-variant-options', 
                                product: product, 
                                option: option, 
                                block: block, 
                                picker_type: 'swatches', 
                                is_color: true 
                              %}
                            </div>
                          </fieldset>

                        {%- else -%}
                          <fieldset class="js product-form__input hidden variant-{{ option.name | escape | downcase }}">
                            {% if block.settings.picker_label %}
                              <legend class="form__label {{ block.settings.label_text_style }}">
                                {{ option.name }} Options
                              </legend>
                            {% endif %}

                            <div class="radio">
															{% render 'product-variant-options', 
                                product: product, 
                                option: option, 
                                block: block, 
                                picker_type: 'swatches', 
                                is_color: false 
                              %}
                            </div>
                          </fieldset>
                        {%- endif -%}
                      {%- endfor -%}
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    </variant-radios>
                  {%- endif -%}
                {%- endif -%}
              {%- endunless -%}

              <noscript class="product-form__noscript-wrapper-{{ section.id }}">
                <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                  <label class="form__label {{ block.settings.label_text_style }}" for="Variants-{{ section.id }}">
                    {{- 'products.product.product_variants' | t -}}
                  </label>
                  <div class="select">
                    <select
                      name="id"
                      id="Variants-{{ section.id }}"
                      class="select__select{{ block.settings.picker_text_style }} "
                      form="{{ product_form_id }}"
                    >
                      {%- for variant in product.variants -%}
                        <option
                          {% if variant == product.selected_or_first_available_variant %}
                            selected="selected"
                          {% endif %}
                          {% if variant.available == false %}
                            disabled
                          {% endif %}
                          value="{{ variant.id }}"
                        >
                          {{ variant.title }}
                          {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                          - {{ variant.price | money | strip_html }}
                        </option>
                      {%- endfor -%}
                    </select>
                    {% render 'icon-caret' %}
                  </div>
                </div>
              </noscript>

            {%- when 'buy_buttons' -%}
              <div class="product-form-wrp {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {{ block.settings.product_form_style }}" {{ block.shopify_attributes }} >

                {%- liquid
                  assign gift_card_recipient_feature_active = false
                  if block.settings.show_gift_card_recipient and product.gift_card?
                    assign gift_card_recipient_feature_active = true
                  endif

                  assign show_dynamic_checkout = false
                  if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
                    assign show_dynamic_checkout = true
                  endif
                -%}

                <product-form class="product-form" data-template="{% if settings.cart_type == "drawer" %}drawer{% else %}page{% endif %}" data-cart-type="{% if settings.cart_type == "drawer" %}drawer{% else %}page{% endif %}" data-hide-errors="{{ gift_card_recipient_feature_active }}">

                  <div class="product-form__error-message-wrapper" role="alert" hidden>
                    <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
                      <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
                      <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
                      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
                      <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
                    </svg>
                    <span class="product-form__error-message"></span>
                  </div>

                  {% if block.settings.show_in_stock %}
                    <p class="stock-status{% if product.selected_or_first_available_variant.available == true %} in-stock{% elsif product.selected_or_first_available_variant.available == false %} out-of-stock{% endif %}">
                      <span class="product-in-stock">
                        {%- render 'icon-tick' %}
                        {{ block.settings.in_stock -}}
                      </span>
                      <span class="product-out-of-stock">
                        {%- render 'icon-unavailable' %}
                        {{ block.settings.out_of_stock -}}
                      </span>
                    </p>
                  {% endif %}

                  {%- form 'product',
                    product,
                    id: product_form_id,
                    class: 'form',
                    novalidate: 'novalidate',
                    data-type: 'add-to-cart-form'
                  -%}

                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled >

                    {%- if gift_card_recipient_feature_active -%}
                      {%- render 'gift-card-recipient-form', 
                        product: product, 
                        form: form, 
                        section: section 
                      -%}
                    {%- endif -%}

                    <div class="product-form__buttons">
											{% liquid
												assign check_against_inventory = true
												if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
													assign check_against_inventory = false
												endif
												if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
													assign quantity_rule_soldout = true
												endif
											%}
                      <div class="product-form__input product-form__quantity" {{ block.shopify_attributes }}>
                        <label class="form__label" for="Quantity-{{ section.id }}">
                          {{ 'products.product.quantity.label' | t }}
                        </label>

                        <quantity-input class="quantity">
                          <button class="quantity__button no-js-hidden" name="minus" type="button">
                            <span class="visually-hidden">
                              {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                            </span>
                            {% render 'icon-minus' %}
                          </button>

                          <input class="quantity__input" type="number" name="quantity" id="Quantity-{{ section.id }}" min="1"
                            {% if product.variant.quantity_rule.max != null %}
                              max="{{ product.variant.quantity_rule.max }}"
                            {% endif %}
                            value="1"
                            form="{{ product_form_id }}"
                            product-price="{{ product.selected_or_first_available_variant.price }}"
                          >
                          <button class="quantity__button no-js-hidden" name="plus" type="button">
                            <span class="visually-hidden">
                              {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                            </span>
                            {% render 'icon-plus' %}
                          </button>
                        </quantity-input>
                      </div>

                      {% liquid
                        assign button_style_type = 'button'
                        assign button_icon_1 = false
                        if block.settings.button_type == 'button_icon'
                          assign button_icon_1 = true
                        elsif block.settings.button_type == 'button_outline'
                          assign button_style_type = 'button btn-bg-transparent'
                          assign button_icon_1 = false
                        elsif block.settings.button_type == 'button_outline_icon'
                          assign button_style_type = 'button btn-bg-transparent'
                          assign button_icon_1 = true
                        endif
                      %}
                      {% if block.settings.image != blank and button_icon_1 == true %}
                        <style>
                          #shopify-section-{{ section.id }} .product-form__submit:not(.loading)::after{
                          	content: '';
                          	position: relative;
                          	margin-left: 0.6rem;
                          	width: 1.7rem;
                          	height: 1.7rem;
                          	background-image: url("{{ block.settings.image | image_url }}");
                          	background-size: cover;
                          }
                        </style>
                      {% endif %}

                      <button type="submit" name="add" {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %} disabled data-test="true"{% endif %}
                        class="product-form__submit {{ button_style_type }}  {% if settings.color_events_button_bg_hover_gradient != blank %} gradient--hover {% endif %} {% if block.settings.button_style == 'btn_secondary' %} button-secondary{% endif %} {% if settings.link_icon != blank and button_icon_1 == true %} button-with-icon{% endif %} {% if block.settings.button_style == 'btn_primary' and settings.color_primery_button_bg_gradient != blank %} gradient gradient--primary{% endif %} {% if block.settings.button_style == 'btn_secondary' and settings.color_secondary_button_bg_gradient != blank %} gradient gradient--secondary {% endif %} button--full-width"
                        {% if block.settings.product_form_style == 'b-style-4' %}
                          data-initial-price="{{ product.selected_or_first_available_variant.price | money }}"
                        {% endif %}
                      >
                        {% if block.settings.product_form_style == 'b-style-4' %}
                          {%- liquid
                            assign target = product.selected_or_first_available_variant

                            assign price = target.price | default: 1999
                            assign money_price = price | money
                            if settings.currency_code_enabled
                              assign money_price = price | money_with_currency
                            endif

                            if target == product and product.price_varies
                              assign money_price = 'products.product.price.from_price_html' | t: price: money_price
                            endif

                            if target == product and product.price_varies and settings.currency_code_enabled
                              assign money_price_max = product.price_max | money_with_currency
                            elsif target == product and product.price_varies
                              assign money_price_max = product.price_max | money
                            endif
                          -%}
                          <div class="price__regular">
                            <span class="visually-hidden visually-hidden--inline">
                              {{- 'products.product.price.regular_price' | t -}}
                            </span>
                            <span class="price-item price-item--regular">
                              {{ money_price }}
                              {% if target == product and product.price_varies %}
                                - {{ money_price_max }}
                              {% endif %}
                            </span>
                          </div>
                        {% endif %}
                        <span class="link-text">
                          {%- if product == blank or product.selected_or_first_available_variant.available == false or quantity_rule_soldout  -%}
                            {{ 'products.product.sold_out' | t }}
                          {%- else -%}
                            {{ 'products.product.add_to_cart' | t }}
                          {%- endif -%}
                        </span>
                      </button>
                    </div>

                    {%- if show_dynamic_checkout -%}
                      {% liquid
                        assign checkout_button_style_type = ''
                        assign checkout_button_icon = false
                        if block.settings.checkout_button_type == 'button_icon'
                          assign checkout_button_icon = true
                        elsif block.settings.checkout_button_type == 'button_outline'
                          assign checkout_button_style_type = 'unbranded-bg-transparent'
                          assign checkout_button_icon = false
                        elsif block.settings.checkout_button_type == 'button_outline_icon'
                          assign checkout_button_style_type = 'button btn-bg-transparent'
                          assign checkout_button_icon = true
                        endif
                      %}

                      <div class="product-form__buttons {{ checkout_button_style_type }} {% if block.settings.button_unbranded_style == 'btn_primary' and settings.color_primery_button_bg_gradient != blank %} gradient gradient--primary{% endif %} {% if block.settings.button_unbranded_style == 'btn_secondary' and settings.color_secondary_button_bg_gradient != blank %} gradient gradient--secondary {% endif %} {% if block.settings.button_unbranded_style == 'btn_secondary' %} unbranded-secondary{% endif %} {% if settings.color_events_button_bg_hover_gradient != blank %} gradient--hover{% endif %}">
                        {{ form | payment_button }}
                      </div>

                      {%- if checkout_button_icon == true and block.settings.image != blank -%}
                        <style>
                          #shopify-section-{{ section.id }} .shopify-payment-button__button--unbranded::after{
                          	content: '';
                          	position: relative;
                          	margin-left: 0.6rem;
                          	width: 1.7rem;
                          	height: 1.7rem;
                          	background-image: url("{{ block.settings.image | image_url }}");
                          	background-size: cover;
                          }
                        </style>
                      {%- endif -%}
                    {%- endif -%}
                  {%- endform -%}
                </product-form>

                {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

                {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

                <pickup-availability class="product__pickup-availabilities no-js-hidden"
                  {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
                    available
                  {% endif %}
                  data-base-url="{{ shop.url }}{{ routes.root_url }}"
                  data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                  data-has-only-default-variant="{{ product.has_only_default_variant }}">
                  <template>
                    <pickup-availability-preview class="pickup-availability-preview">
                      {% render 'icon-unavailable' %}
                      <div class="pickup-availability-info">
                        <p class="caption-large">
                          {{ 'products.product.pickup_availability.unavailable' | t }}
                        </p>
                        <button class="pickup-availability-button link link--text underlined-link">
                          {{ 'products.product.pickup_availability.refresh' | t }}
                        </button>
                      </div>
                    </pickup-availability-preview>
                  </template>
                </pickup-availability>

                <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
              </div>

            {%- when 'trust_badges' -%}
              <div class="trust-budges" {{ block.shopify_attributes }}>
                <div class="rte">
                  {{ block.settings.trust_badges_label }}
                </div>
                <ul class="trust-budges__list">
                  {%- for type in shop.enabled_payment_types -%}
                    <li class="trust-budges__item">
                      {{ type | payment_type_svg_tag: class: 'icon icon--full-color' }}
                    </li>
                  {%- endfor -%}
                </ul>
              </div>

            {%- when 'crossell_product' -%}
              {% if block.settings.crossell_product != blank %}
                <div class="crossell-product-detail">
                  <label>
                    <span>
                      <input
                        type="checkbox"
                        name="id[]"
                        value="{{ block.settings.crossell_product.selected_or_first_available_variant.id }}"
                      >
                      <span class="checkbox"></span>
                      {{ block.settings.crossell_product_label }}
                    </span>

                    <span class="price">
                      {{ block.settings.crossell_product_type }}
                      {{ block.settings.crossell_product.price | money }}
                    </span>
                  </label>
                </div>

                <script defer>
									function cspAddToCart() {
										let isProductAdded = false;

										async function getCart() {
											const url = "/cart.js";
											const resp = await fetch(url);
											return await resp.json();
										}

										async function addItem(variantId) {

											const cart = await getCart();
											const existingItem = cart.items.find(item => item.id === variantId);
											
											const newQuantity = existingItem ? existingItem.quantity + 1 : 1;

											const options = {
													method: 'POST',
													headers: {
															"Content-Type": "application/json",
															"Accept": "application/json"
													},
													body: JSON.stringify({
															id: variantId,
															quantity: newQuantity
													})
											};
											const url = "/cart/add.json";
											const resp = await fetch(url, options);
											isProductAdded = true;
											return await resp.json();
										}

										async function removeItem(variantId) {
											if(!isProductAdded) {
												const cart = await getCart();
												const existingItem = cart.items.find(item => item.id === variantId);
												
												const newQuantity = existingItem && existingItem.quantity > 1 ? existingItem.quantity - 1 : 0;

												const options = {
														method: 'POST',
														headers: {
																"Content-Type": "application/json",
																"Accept": "application/json"
														},
														body: JSON.stringify({
																id: variantId,
																quantity: newQuantity
														})
												};

												const url = "/cart/change.js";
												const resp = await fetch(url, options);
												return await resp.json();
											} else {
												isProductAdded = true;
											}
										}
										
										const cspAddToCartTrigger = document.querySelector('.crossell-product-detail label');
										let cspAddToCartInput = document.querySelector('.crossell-product-detail input');

										cspAddToCartTrigger.addEventListener("change", function() {

											let variantId = cspAddToCartInput.value;
											const quickBtns = document.querySelectorAll('.shopify-payment-button');
											if (cspAddToCartInput.checked === true) {
												addItem(variantId).catch(error => console.error(error));
												if(quickBtns.length) {
													quickBtns.forEach(btn => {
														btn.style.display = 'none';
													})
												}
											} else {
												removeItem(variantId).catch(error => console.error(error));
												if(quickBtns.length) {
													quickBtns.forEach(btn => {
														btn.style.display = 'block';
													})
												}
											}
										});
									}
								
									cspAddToCart();
                </script>
              {% endif %}

            {%- when 'rating' -%}
              {%- if product.metafields.reviews.rating.value != blank -%}
                {% liquid
                  assign rating_decimal = 0
                  assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                  if decimal >= 0.3 and decimal <= 0.7
                    assign rating_decimal = 0.5
                  elsif decimal > 0.7
                    assign rating_decimal = 1
                  endif
                %}

                <div class="rating" role="img" aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}">
                  
                  <span
                    aria-hidden="true"
                    class="rating-star color-icon"
                    style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"
                  ></span>
                </div>

                <p class="rating-text caption">
                  <span aria-hidden="true">
                    {{- product.metafields.reviews.rating.value }} /
                    {{ product.metafields.reviews.rating.value.scale_max -}}
                  </span>
                </p>

                <p class="rating-count caption">
                  <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                  <span class="visually-hidden">
                    {{- product.metafields.reviews.rating_count }}
                    {{ 'accessibility.total_reviews' | t -}}
                  </span>
                </p>
              {%- endif -%}

            {%- when 'complementary' -%}
              <product-recommendations class="complementary-products no-js-hidden" data-slides-per-view="{{ block.settings.products_per_page }}"
                data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.product_list_limit }}&intent=complementary">

                {%- if recommendations.performed and recommendations.products_count > 0 -%}
                  <aside aria-label="{{ 'accessibility.complementary_products' | t }}" {{ block.shopify_attributes -}}>
                    <div class="complementary-products__container">

                      <div class="summary__title">
                        <span class="h4 accordion__title {{ block.settings.font_weight }}">
                          {{- block.settings.block_heading -}}
                        </span>
												<div class="complementary-products__slideshow-btns ab-navigation pagination-{{ block.settings.pagination_style }}">
													<div class="swiper-button-prev ab-nav ab-prev style-4">{% render 'icon-arrow' %}</div>
													<div class="swiper-pagination-custom"></div>
													<div class="swiper-button-next ab-nav ab-next style-4">{% render 'icon-arrow' %}</div>
												</div>
                      </div>

                      <div class="complementary-products__slideshow">
												<div class="swiper" role="list">
													<div id="Slide-{{ block.id }}-{{ forloop.index }}" class="swiper-wrapper" tabindex="-1" role="group">

														{%- for product in recommendations.products -%}
															<div class="swiper-slide">
																{% render 'product-card-complementary',
																	card_product: product,
																	show_quick_add: block.settings.enable_quick_add,
																	quick_add_label: block.settings.quick_add_label,
																	section_id: section.id
																%}
															</div>
														{%- endfor -%}
													</div>
                        </div>
                      </div>
                    </div>
                  </aside>
                {%- endif -%}
                {{ 'component-card.css' | asset_url | stylesheet_tag }}
                {{ 'component-navigation.css' | asset_url | stylesheet_tag }}
                {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
              </product-recommendations>

            {%- when 'sku' -%}
              <p class="product__sku no-js-hidden {% if settings.theme_animations != 'no-animation' %} aside-text scroll-animation{% endif %} {{ block.settings.text_style }}" id="Sku-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                <span class="visually-hidden">{{ 'customer.order.sku' | t }}</span>
                {{- product.selected_or_first_available_variant.sku -}}
              </p>
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
  </div>

  <product-modal id="ProductModal-{{ section.id }}" class="product-media-modal media-modal">
    <div
      class="product-media-modal__dialog"
      role="dialog"
      aria-label="{{ 'products.modal.label' | t }}"
      aria-modal="true"
      tabindex="-1"
    >
      <button
        id="ModalClose-{{ section.id }}"
        type="button"
        class="product-media-modal__toggle"
        aria-label="{{ 'accessibility.close' | t }}"
      >
        {% render 'icon-close' %}
      </button>

      <div
        class="product-media-modal__content"
        role="document"
        aria-label="{{ 'products.modal.label' | t }}"
        tabindex="0"
      >
        {%- liquid
          if product.selected_or_first_available_variant.featured_media != null
            assign media = product.selected_or_first_available_variant.featured_media
            render 'product-media', media: media, loop: section.settings.enable_video_looping, variant_image: section.settings.hide_variants
          endif
        -%}

        {%- for media in product.media -%}
          {%- liquid
            if section.settings.hide_variants and variant_images contains media.src
              assign variant_image = true
            else
              assign variant_image = false
            endif

            unless media.id == product.selected_or_first_available_variant.featured_media.id
              render 'product-media', media: media, loop: section.settings.enable_video_looping, variant_image: variant_image
            endunless
          -%}
        {%- endfor -%}
      </div>
    </div>
  </product-modal>

  {% assign popups = section.blocks | where: 'type', 'popup' %}
  {%- for block in popups -%}
    <modal-dialog
      id="PopupModal-{{ block.id }}"
      class="product-popup-modal {{ block.settings.popup_style }}"
      {{ block.shopify_attributes }}
    >
      <div
        role="dialog"
        aria-label="{{ block.settings.text }}"
        aria-modal="true"
        class="product-popup-modal__content"
        tabindex="-1"
      >
        <button
          id="ModalClose-{{ block.id }}"
          type="button"
          class="product-popup-modal__toggle"
          aria-label="{{ 'accessibility.close' | t }}"
        >
					{% render 'icon-close-small' %}
        </button>
        <div class="product-popup-modal__content-info rte">
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}
	{% javascript %}
		if (!customElements.get('product-modal')) {
			class ProductModal extends ModalDialog {
				constructor() {
					super();
				}

				hide() {
					super.hide();
					window.pauseAllMedia();
				}

				show(opener) {
					super.show(opener);
					this.showActiveMedia();
					const lazyImages = this.querySelectorAll('.lazy-image');
					if(lazyImages.length > 0) {
						lazyImages.forEach(img => {
							this.loadImage(img)
							img.classList.remove('lazy-image');
						});
					}
				}

				loadImage = (img) => {
					img.src = img.dataset.src;
					img.srcset = img.dataset.srcset;
					img.sizes = img.dataset.sizes;
					img.classList.remove('lazy-image');
				}

				showActiveMedia() {
					this.querySelectorAll(
						`[data-media-id]:not([data-media-id="${this.openedBy.getAttribute('data-media-id')}"])`
					).forEach((element) => {
						element.classList.remove('active');
					});
					const activeMedia = this.querySelector(`[data-media-id="${this.openedBy.getAttribute('data-media-id')}"]`);
					const activeMediaTemplate = activeMedia.querySelector('template');
					const activeMediaContent = activeMediaTemplate ? activeMediaTemplate.content : null;
					activeMedia.classList.add('active');
					activeMedia.scrollIntoView();

					const container = this.querySelector('[role="document"]');
					container.scrollLeft = (activeMedia.width - container.clientWidth) / 2;

					if (
						activeMedia.nodeName == 'DEFERRED-MEDIA' &&
						activeMediaContent &&
						activeMediaContent.querySelector('.js-youtube')
					)
						activeMedia.loadContent();
				}
			}

			customElements.define('product-modal', ProductModal);
		}
	{% endjavascript %}

	{% if product.media.size > 0 %}
		<script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
	{% endif %}

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			function isIE() {
				const ua = window.navigator.userAgent;
				const msie = ua.indexOf('MSIE ');
				const trident = ua.indexOf('Trident/');
				return msie > 0 || trident > 0;
			}
			if (!isIE()) return;
			const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
			const noScriptInputWrapper = document.createElement('div');
			const variantSwitcher =
				document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
				document.querySelector('variant-selects[data-section="{{ section.id }}"]');
			noScriptInputWrapper.innerHTML = document.querySelector(
				'.product-form__noscript-wrapper-{{ section.id }}'
			).textContent;
			variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;
			document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
				hiddenInput.value = event.currentTarget.value;
			});
		});
	</script>

	{%- if first_3d_model -%}
		<script type="application/json" id="ProductJSON-{{ product.id }}">
			{{ product.media | where: 'media_type', 'model' | json }}
		</script>
		<script src="{{ 'product-model.js' | asset_url }}" defer></script>
	{%- endif -%}

	{%- liquid
		if product.selected_or_first_available_variant.featured_media
			assign seo_media = product.selected_or_first_available_variant.featured_media
		else
			assign seo_media = product.featured_media
		endif
	-%}

	<script type="application/ld+json">
		{
			"@context": "http://schema.org/",
			"@type": "Product",
			"name": {{ product.title | json }},
			"url": {{ request.origin | append: product.url | json }},
			{% if seo_media -%}
				"image": [
					{{ seo_media | image_url: width: seo_media.preview_image.width | prepend: "https:" | json }}
				],
			{%- endif %}
			"description": {{ product.description | strip_html | json }},
			{% if product.selected_or_first_available_variant.sku != blank -%}
				"sku": {{ product.selected_or_first_available_variant.sku | json }},
			{%- endif %}
			"brand": {
				"@type": "Brand",
				"name": {{ product.vendor | json }}
			},
			"offers": [
				{%- for variant in product.variants -%}
					{
						"@type" : "Offer",
						{%- if variant.sku != blank -%}
							"sku": {{ variant.sku | json }},
						{%- endif -%}
						{%- if variant.barcode.size == 12 -%}
							"gtin12": {{ variant.barcode }},
						{%- endif -%}
						{%- if variant.barcode.size == 13 -%}
							"gtin13": {{ variant.barcode }},
						{%- endif -%}
						{%- if variant.barcode.size == 14 -%}
							"gtin14": {{ variant.barcode }},
						{%- endif -%}
						"availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
						"price" : {{ variant.price | divided_by: 100.00 | json }},
						"priceCurrency" : {{ cart.currency.iso_code | json }},
						"url" : {{ request.origin | append: variant.url | json }}
					}{% unless forloop.last %},{% endunless %}
				{%- endfor -%}
			]
		}
	</script>
</section>

{% if section.settings.enable_sticky_add_to_cart %}
  {% render 'sticky-add-to-cart' %}
{% endif %}

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "large",
              "label": "Large"
            },
            {
              "value": "medium",
              "label": "Medium"
            },
            {
              "value": "normal",
              "label": "Small"
            },
            {
              "value": "small",
              "label": "Extra small"
            }
          ],
          "default": "normal",
          "label": "Font size"
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon-with-text.name",
      "settings": [
        {
          "type": "select",
          "id": "bottom_space",
          "options": [
            {
              "value": "",
              "label": "Default"
            },
            {
              "value": "mb-1",
              "label": "Small"
            }
          ],
          "default": "",
          "label": "Bottom space"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        },
        {
          "type": "inline_richtext",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "select",
          "id": "font_size",
          "options": [
            {
              "value": "body-fs-extra-large",
              "label": "Large"
            },
            {
              "value": "body-fs-large",
              "label": "Medium"
            },
            {
              "value": "body-fs-medium",
              "label": "Small"
            },
            {
              "value": "body-fs-small",
              "label": "Extra small"
            }
          ],
          "default": "body-fs-medium",
          "label": "Font size"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "title_font",
          "options": [
            {
              "value": "hf-heading",
              "label": "Heading font"
            },
            {
              "value": "hf-body",
              "label": "Body font"
            }
          ],
          "default": "hf-body",
          "label": "Font family"
        },
        {
          "type": "select",
          "id": "title_color",
          "options": [
            {
              "value": "color-text-main",
              "label": "t:settings_schema.colors.settings.color_general_main_text.label"
            },
            {
              "value": "color-text-secondary",
              "label": "t:settings_schema.colors.settings.color_general_secondary_text.label"
            },
            {
              "value": "color-general-heading",
              "label": "t:settings_schema.colors.settings.color_general_heading.label"
            }
          ],
          "default": "color-text-main",
          "label": "t:sections.all.colors.label_heading"
        },
        {
          "type": "select",
          "id": "title_size",
          "options": [
            {
              "value": "h2",
              "label": "Extra large"
            },
            {
              "value": "large",
              "label": "Large"
            },
            {
              "value": "medium",
              "label": "Medium"
            },
            {
              "value": "small",
              "label": "Small"
            }
          ],
          "default": "small",
          "label": "Font size"
        },
        {
          "type": "select",
          "id": "title_weight",
          "options": [
            {
              "value": "weight-bold",
              "label": "Bold"
            },
            {
              "value": "weight-semi-bold",
              "label": "Semi Bold"
            },
            {
              "value": "weight-medium",
              "label": "Medium"
            },
            {
              "value": "weight-normal",
              "label": "Normal"
            },
            {
              "value": "weight-light",
              "label": "Light"
            }
          ],
          "default": "weight-normal",
          "label": "Font weight"
        },
        {
          "type": "select",
          "id": "title_style",
          "options": [
            {
              "value": "initial",
              "label": "Default"
            },
            {
              "value": "uppercase",
              "label": "Uppercase"
            }
          ],
          "default": "initial",
          "label": "Heading style"
        },
        {
          "type": "checkbox",
          "id": "block_width",
          "default": false,
          "label": "Enable half width"
        }
      ]
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "price_font",
          "options": [
            {
              "value": "hf-heading",
              "label": "Heading font"
            },
            {
              "value": "hf-body",
              "label": "Body font"
            }
          ],
          "default": "hf-body",
          "label": "Font family"
        },
        {
          "type": "select",
          "id": "price_class",
          "options": [
            {
              "value": "price--extra",
              "label": "Large"
            },
            {
              "value": "price--large",
              "label": "Medium"
            },
            {
              "value": "price--small",
              "label": "Small"
            },
            {
              "value": "price--extra-small",
              "label": "Extra small"
            }
          ],
          "default": "price--large",
          "label": "Font size"
        },
        {
          "type": "select",
          "id": "price_weight",
          "options": [
            {
              "value": "weight-bold",
              "label": "Bold"
            },
            {
              "value": "weight-semi-bold",
              "label": "Semi bold"
            },
            {
              "value": "weight-medium",
              "label": "Medium"
            },
            {
              "value": "weight-normal",
              "label": "Normal"
            },
            {
              "value": "weight-light",
              "label": "Light"
            }
          ],
          "default": "weight-normal",
          "label": "Font weight"
        },
        {
          "type": "checkbox",
          "id": "block_width",
          "default": false,
          "label": "Enable half width"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "info": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.info",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "coundownBar",
      "name": "Countdown bar",
      "settings": [
        {
          "type": "select",
          "id": "font_family",
          "options": [
            {
              "value": "heading-font",
              "label": "Heading font"
            },
            {
              "value": "body-font",
              "label": "Body font"
            }
          ],
          "default": "body-font",
          "label": "Font family"
        },
        {
          "type": "select",
          "id": "bottom_space",
          "options": [
            {
              "value": "",
              "label": "Default"
            },
            {
              "value": "mb-1",
              "label": "Small"
            }
          ],
          "default": "",
          "label": "Bottom space"
        },
        {
          "type": "select",
          "id": "countdown_style",
          "options": [
            {
              "value": "simple",
              "label": "Simple"
            },
            {
              "value": "",
              "label": "With outline"
            },
            {
              "value": "style-1",
              "label": "Overlap"
            }
          ],
          "default": "",
          "label": "Style"
        },
        {
          "type": "text",
          "id": "coundown_date",
          "default": "Dec 31, 2023",
          "label": "End date",
          "info": "Example: Dec 31, 2023 or Dec 31, 2023 20:00"
        },
        {
          "type": "select",
          "id": "coundown_end",
          "options": [
            {
              "value": "show_zeroes",
              "label": "Show zeroes"
            },
            {
              "value": "hide_coundown",
              "label": "Hide countdown"
            },
            {
              "value": "disable_buttons",
              "label": "Disable buy buttons"
            }
          ],
          "default": "disable_buttons",
          "label": "When date has passed"
        },
        {
          "type": "text",
          "id": "contdown_label",
          "default": "Hurry Up! Sale Ends In",
          "label": "Heading"
        },
        {
          "type": "select",
          "id": "contdown_label_text_color",
          "options": [
            {
              "value": "color-text-main",
              "label": "t:settings_schema.colors.settings.color_general_main_text.label"
            },
            {
              "value": "color-text-secondary",
              "label": "t:settings_schema.colors.settings.color_general_secondary_text.label"
            },
            {
              "value": "color-general-heading",
              "label": "t:settings_schema.colors.settings.color_general_heading.label"
            }
          ],
          "default": "color-text-main",
          "label": "t:sections.all.colors.label_heading"
        },
        {
          "type": "text",
          "id": "days_label",
          "default": "Days",
          "label": "Days label"
        },
        {
          "type": "color",
          "id": "days_color",
          "label": "Text color"
        },
        {
          "type": "text",
          "id": "hours_label",
          "default": "Hrs",
          "label": "Hours label"
        },
        {
          "type": "color",
          "id": "hours_color",
          "label": "Text color"
        },
        {
          "type": "text",
          "id": "mins_label",
          "default": "Mins",
          "label": "Minutes label"
        },
        {
          "type": "color",
          "id": "mins_color",
          "label": "Text color"
        },
        {
          "type": "text",
          "id": "secs_label",
          "default": "Secs",
          "label": "Seconds label"
        },
        {
          "type": "color",
          "id": "secs_color",
          "label": "Text color"
        }
      ]
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        },
        {
          "type": "checkbox",
          "id": "color_button",
          "default": true,
          "label": "t:sections.main-product.blocks.variant_picker.settings.color_button.label"
        },
        {
          "type": "header",
          "content": "Picker settings"
        },
        {
          "type": "select",
          "id": "picker_style",
          "options": [
            {
              "value": "style-1",
              "label": "Dropdown with border"
            },
            {
              "value": "style-2",
              "label": "Dropdown with divider"
            },
            {
              "value": "v-style-3",
              "label": "Dropdown with divider full width"
            }
          ],
          "default": "style-1",
          "label": "Dropdown picker style"
        },
        {
          "type": "range",
          "id": "picker_font_size",
          "min": 10,
          "max": 20,
          "step": 1,
          "unit": "px",
          "label": "Font size",
          "default": 16
        },
        {
          "type": "select",
          "id": "picker_font_weight",
          "options": [
            {
              "value": "700",
              "label": "Bold"
            },
            {
              "value": "600",
              "label": "Semi-bold"
            },
            {
              "value": "500",
              "label": "Medium"
            },
            {
              "value": "400",
              "label": "Normal"
            },
            {
              "value": "300",
              "label": "Light"
            }
          ],
          "default": "400",
          "label": "Font weight"
        },
        {
          "type": "select",
          "id": "picker_text_style",
          "options": [
            {
              "value": "",
              "label": "Initial"
            },
            {
              "value": "uppercase",
              "label": "Uppercase"
            }
          ],
          "default": "",
          "label": "Text style"
        },
        {
          "type": "header",
          "content": "Label settings"
        },
        {
          "type": "checkbox",
          "id": "picker_label",
          "default": true,
          "label": "Show picker label"
        },
        {
          "type": "range",
          "id": "label_font_size",
          "min": 10,
          "max": 20,
          "step": 1,
          "unit": "px",
          "label": "Font size",
          "default": 14
        },
        {
          "type": "select",
          "id": "label_font_weight",
          "options": [
            {
              "value": "700",
              "label": "Bold"
            },
            {
              "value": "600",
              "label": "Semi-bold"
            },
            {
              "value": "500",
              "label": "Medium"
            },
            {
              "value": "400",
              "label": "Normal"
            },
            {
              "value": "300",
              "label": "Light"
            }
          ],
          "default": "500",
          "label": "Font weight"
        },
        {
          "type": "select",
          "id": "label_text_style",
          "options": [
            {
              "value": "",
              "label": "Initial"
            },
            {
              "value": "uppercase",
              "label": "Uppercase"
            }
          ],
          "default": "",
          "label": "Text style"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "product_form_style",
          "options": [
            {
              "value": "style-1",
              "label": "Half-width add to cart"
            },
            {
              "value": "style-2",
              "label": "Full-width add to cart"
            },
            {
              "value": "b-style-4",
              "label": "Full-width add to cart with price"
            }
          ],
          "default": "style-1",
          "label": "Product form style"
        },
        {
          "type": "select",
          "id": "button_style",
          "options": [
            {
              "value": "btn_primary",
              "label": "t:sections.buttons.button_color_1"
            },
            {
              "value": "btn_secondary",
              "label": "t:sections.buttons.button_color_2"
            }
          ],
          "default": "btn_primary",
          "label": "t:sections.buttons.button_color_style"
        },
        {
          "type": "select",
          "id": "button_type",
          "options": [
            {
              "value": "button",
              "label": "t:sections.buttons.select_button_default"
            },
            {
              "value": "button_icon",
              "label": "t:sections.buttons.select_button_default_icon"
            },
            {
              "value": "button_outline",
              "label": "t:sections.buttons.select_button_outline"
            },
            {
              "value": "button_outline_icon",
              "label": "t:sections.buttons.select_button_outline_icon"
            }
          ],
          "default": "button_outline",
          "label": "t:sections.buttons.select_button_type"
        },
        {
          "type": "checkbox",
          "id": "show_in_stock",
          "default": true,
          "label": "Show in stock position"
        },
        {
          "type": "text",
          "id": "in_stock",
          "label": "In stock text",
          "default": "In stock - Ready to ship!"
        },
        {
          "type": "text",
          "id": "out_of_stock",
          "label": "Out of stock text",
          "default": "Out of stock"
        },
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "select",
          "id": "button_unbranded_style",
          "options": [
            {
              "value": "btn_primary",
              "label": "Primary"
            },
            {
              "value": "btn_secondary",
              "label": "Secondary"
            }
          ],
          "default": "btn_primary",
          "label": "Buy it now button color style"
        },
        {
          "type": "select",
          "id": "checkout_button_type",
          "options": [
            {
              "value": "button",
              "label": "t:sections.buttons.select_button_default"
            },
            {
              "value": "button_icon",
              "label": "t:sections.buttons.select_button_default_icon"
            }
          ],
          "default": "button",
          "label": "t:sections.buttons.select_button_type"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Custom icon"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "description_heading",
          "label": "Custom description heading"
        },
        {
          "type": "checkbox",
          "id": "description_top_line",
          "default": false,
          "label": "Show top line"
        },
        {
          "type": "checkbox",
          "id": "description_tab",
          "default": false,
          "label": "Description collapsible tab"
        },
        {
          "type": "select",
          "id": "color_description_title",
          "options": [
            {
              "value": "",
              "label": "Main"
            },
            {
              "value": "color-text-secondary",
              "label": "Secondary"
            }
          ],
          "default": "",
          "label": "Heading color"
        },
        {
          "type": "select",
          "id": "size_description_title",
          "options": [
            {
              "value": "h2",
              "label": "Large"
            },
            {
              "value": "h3",
              "label": "Medium"
            },
            {
              "value": "h4",
              "label": "Small"
            },
            {
              "value": "extra-small",
              "label": "Extra small"
            }
          ],
          "default": "h4",
          "label": "Heading size"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "body-fs-extra-large",
              "label": "Extra large"
            },
            {
              "value": "body-fs-large",
              "label": "Large"
            },
            {
              "value": "body-fs-medium",
              "label": "Medium"
            },
            {
              "value": "body-fs-small",
              "label": "Small"
            },
            {
              "value": "body-fs-extra-small",
              "label": "Extra small"
            }
          ],
          "default": "body-fs-medium",
          "label": "Text size"
        }
      ]
    },
    {
      "type": "product_features",
      "name": "Product features",
      "limit": 8,
      "settings": [
        {
          "type": "image_picker",
          "id": "product_features_image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "product_features_heading",
          "default": "SUSTAINABLE",
          "label": "Heading"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "body-fs-extra-large",
              "label": "Large"
            },
            {
              "value": "body-fs-large",
              "label": "Medium"
            },
            {
              "value": "body-fs-medium",
              "label": "Small"
            },
            {
              "value": "body-fs-small",
              "label": "Extra small"
            }
          ],
          "default": "body-fs-medium",
          "label": "Font size"
        },
        {
          "type": "select",
          "id": "font_weight",
          "options": [
            {
              "value": "weight-bold",
              "label": "Bold"
            },
            {
              "value": "weight-semi-bold",
              "label": "Semi-bold"
            },
            {
              "value": "weight-medium",
              "label": "Medium"
            },
            {
              "value": "weight-normal",
              "label": "Normal"
            }
          ],
          "default": "weight-medium",
          "label": "Font weight"
        }
      ]
    },
    {
      "type": "trust_badges",
      "name": "Trust badges",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "trust_badges_label",
          "default": "<p>SECURE CHECKOUT WITH</p>",
          "label": "Trust badges label"
        }
      ]
    },
    {
      "type": "crossell_product",
      "name": "Cross sell product",
      "limit": 1,
      "settings": [
        {
          "type": "product",
          "id": "crossell_product",
          "label": "Cross sell product"
        },
        {
          "type": "text",
          "id": "crossell_product_label",
          "default": "Add a special touch",
          "label": "Cross sell product label"
        },
        {
          "type": "text",
          "id": "crossell_product_type",
          "default": "Gift box |",
          "label": "Cross sell product type"
        }
      ]
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "checkbox",
          "id": "social_linkedin_link",
          "label": "t:settings_schema.social-media.settings.social_linkedin_link.label"
        },
        {
          "type": "checkbox",
          "id": "social_twitter_link",
          "label": "t:settings_schema.social-media.settings.social_twitter_link.label"
        },
        {
          "type": "checkbox",
          "id": "social_facebook_link",
          "label": "t:settings_schema.social-media.settings.social_facebook_link.label"
        },
        {
          "type": "checkbox",
          "id": "social_pinterest_link",
          "label": "t:settings_schema.social-media.settings.social_pinterest_link.label"
        },
        {
          "type": "checkbox",
          "id": "show_telegram_share",
          "label": "Telegram"
        },
        {
          "type": "checkbox",
          "id": "social_tumblr_link",
          "label": "t:settings_schema.social-media.settings.social_tumblr_link.label"
        },
        {
          "type": "checkbox",
          "id": "social_snapchat_link",
          "label": "t:settings_schema.social-media.settings.social_snapchat_link.label"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "color_description_title",
          "options": [
            {
              "value": "",
              "label": "Main"
            },
            {
              "value": "color-text-secondary",
              "label": "Secondary"
            }
          ],
          "default": "",
          "label": "Heading color"
        },
        {
          "type": "select",
          "id": "size_description_title",
          "options": [
            {
              "value": "h2",
              "label": "Large"
            },
            {
              "value": "h3",
              "label": "Medium"
            },
            {
              "value": "h4",
              "label": "Small"
            },
            {
              "value": "extra-small",
              "label": "Extra small"
            }
          ],
          "default": "extra-small",
          "label": "Heading size"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "type": "image_picker",
          "id": "link_icon_image",
          "label": "Link icon"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        },
        {
          "type": "select",
          "id": "popup_style",
          "options": [
            {
              "value": "style-1",
              "label": "Gradient background"
            },
            {
              "value": "style-3",
              "label": "Without background"
            }
          ],
          "default": "style-1",
          "label": "Popup style"
        },
        {
          "type": "image_picker",
          "id": "popup_background",
          "label": "Popup background"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "sku",
      "name": "SKU",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.featured-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Pairs well with",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "select",
          "id": "font_weight",
          "options": [
            {
              "value": "weight-bold",
              "label": "Bold"
            },
            {
              "value": "weight-semi-bold",
              "label": "Semi-bold"
            },
            {
              "value": "weight-medium",
              "label": "Medium"
            },
            {
              "value": "weight-normal",
              "label": "Normal"
            }
          ],
          "default": "weight-medium",
          "label": "Font weight"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "arrows",
              "label": "Arrows"
            },
            {
              "value": "arrows-counter",
              "label": "Counter"
            }
          ],
          "default": "arrows",
          "label": "Pagination style"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 4,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 3,
          "step": 1,
          "default": 3,
          "label": "Number of products per page"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": true
        },
        {
          "type": "text",
          "id": "quick_add_label",
          "default": "Choose Options",
          "label": "Quick add button label"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_add_to_cart",
      "label": "Enable sticky add to cart bar"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_content",
      "label": "Enable sticky content on desktop"
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 400,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Content width",
      "default": 800
    },
    {
      "type": "header",
      "content": "Breadcrumbs settings"
    },
    {
      "type": "checkbox",
      "id": "enable_breadcrumb",
      "default": true,
      "label": "t:sections.main-product.settings.enable_breadcrumb.label"
    },
		{
      "type": "select",
      "id": "breadcrumb_style",
      "options": [
        {
          "value": "style-1",
          "label": "Flat elements"
        },
        {
          "value": "style-2",
          "label": "Block underline"
        }
      ],
      "default": "style-1",
      "label": "Breadcrumbs style"
    },
		{
      "type": "select",
      "id": "breadcrumbs_product_collection",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "first_collection",
          "label": "Collection alphabetically sorted"
        },
				{
          "value": "custom",
          "label": "Custom collection"
        },
				{
          "value": "custom_list",
          "label": "Custom collections"
        }
      ],
      "default": "none",
      "label": "Breadcrumbs product collection"
    },
    {
      "type": "checkbox",
      "id": "show_products",
      "default": true,
      "label": "Show global products"
    },
		{
			"type": "collection",
			"id": "custom_product_collection",
			"label": "Custom product collection",
			"info": "Add custom collection using metafield. See [the link](https://docs.muup.co/article/1033-adding-custom-collection-to-breadcrumbs-using-metafield) for details."
		},
		{
			"type": "collection_list",
			"id": "custom_product_collection_list",
      "limit": 3,
			"label": "Custom product collections list",
			"info": "Add custom collection using metafield. See [the link](https://docs.muup.co/article/1033-adding-custom-collection-to-breadcrumbs-using-metafield) for details."
		},
    {
      "type": "select",
      "id": "breadcrumbs_space",
      "options": [
        {
          "value": "",
          "label": "t:sections.main-product.settings.breadcrumbs_space.option_1"
        },
        {
          "value": "mb-3",
          "label": "t:sections.main-product.settings.breadcrumbs_space.option_2"
        }
      ],
      "default": "",
      "info": "For \"flat elements\" style",
      "label": "t:sections.main-product.settings.breadcrumbs_space.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "Original"
        },
        {
          "value": "cover",
          "label": "Fill"
        }
      ],
      "default": "contain",
      "label": "Media fit"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "Stacked"
        },
        {
          "value": "stacked-without-gaps",
          "label": "Stacked without gaps"
        },
        {
          "value": "columns",
          "label": "2 columns"
        },
        {
          "value": "thumbnail",
          "label": "Thumbnail"
        },
        {
          "value": "thumbnail_slider",
          "label": "Thumbnail slideshow"
        }
      ],
      "default": "stacked",
      "label": "Gallery layout"
    },
    {
      "type": "select",
      "id": "thumbnail_position",
      "options": [
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "bottom",
      "label": "Thumbnail position"
    },
    {
      "type": "checkbox",
      "id": "gallery_layout_circle",
      "default": false,
      "label": "Thumbnail circle"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "show_image_outline",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_image_outline.label"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "show",
          "label": "Thumbnail"
        },
        {
          "value": "numbers",
          "label": "Numbers"
        },
        {
          "value": "bullets",
          "label": "Bullets"
        }
      ],
      "default": "numbers",
      "label": "Mobile layout"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "default": false,
      "label": "Enable video autoplay"
    },
    {
      "type": "checkbox",
      "id": "enable_gallery_popup",
      "default": false,
      "label": "t:sections.main-product.settings.enable_gallery_popup.label"
    },
    {
      "type": "checkbox",
      "id": "section_show_badges",
      "default": true,
      "label": "Show badges"
    },
    {
      "type": "range",
      "id": "column_width",
      "min": 30,
      "max": 70,
      "step": 1,
      "unit": "%",
      "label": "Image width",
      "default": 50
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 0
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "secondary",
          "label": "Section background"
        }
      ],
      "default": "none",
      "label": "Background"
    },
    {
      "type": "color",
      "id": "color_bg",
      "label": "Background color",
      "default": "#5B6460"
    },
    {
      "type": "image_picker",
      "id": "overlay",
      "label": "Image overlay"
    },
    {
      "type": "select",
      "id": "columns_gap",
      "options": [
        {
          "value": "col-gap--large",
          "label": "Large"
        },
        {
          "value": "",
          "label": "Medium"
        },
        {
          "value": "gap--small",
          "label": "Small"
        }
      ],
      "default": "",
      "label": "Column gap"
    }
  ]
}
{% endschema %}
